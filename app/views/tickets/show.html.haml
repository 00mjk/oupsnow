- @title = "ticket #{@ticket.title}"

- content_for :milestone_sidebar do
  - if @ticket.milestone_id
    = render :partial => 'shared/milestone_sidebar', :locals => {:project => @project, :milestone => @ticket.milestone, :sidebar_title => 'Ticket milestone'}

- content_for :watchers_sidebar do
  = render :partial => 'shared/watchers', :locals => { :watchers => @ticket.watchers }

- content_for :tag_cloud_sidebar do
  = render :partial => 'shared/tag_cloud', :locals => { :tags => @ticket.tag_counts, :project => @ticket.project }

#block-lists.block
  .content
    %h2= "Ticket ##{@ticket.num}"
    .inner
      #ticket_status
        %span=@ticket.state.name
      - if user_signed_in?
        #watch_it
          - if @ticket.watchers?(current_user)
            - form_tag unwatch_project_ticket_url(@project, @ticket), {:method => :put} do
              = submit_tag 'unwatch this ticket'
          - else
            - form_tag watch_project_ticket_url(@project, @ticket), {:method => :put} do
              = submit_tag 'watch this ticket'


      #ticket
        %h2= @ticket.title
        %p.date
          Reported by
          =@ticket.creator_user_name
          |
          =@ticket.created_at

        %p= textilized @ticket.description

        .edit= link_to 'edit',  edit_main_description_project_ticket_url(@project, @ticket) if admin?(@project)

      - unless @ticket.ticket_updates.empty?
        %h3 Comments and changes to this ticket

      %ul#ticket_update
        - @ticket.ticket_updates.each do |up|
          %li{:id => "ticket_update-#{@ticket.num}-#{up.id}", :class => 'top-ticket-update'}
            %h4
              =up.creator_user_name
              |
              =up.created_at
            %ul.list_properties{:id => "properties_change-#{@ticket.num}-#{up.id}"}
              - up.properties_update.each do |prop|
                %li= update_field(prop)
            %p= textilized up.description
            .edit=link_to 'edit', edit_project_ticket_ticket_update_url(@project, @ticket,up) if admin?(@project)

      - if user_signed_in?

        - if @preview_description
          %fieldset.preview
            %legend Preview
            = textilized @preview_description

        = flash[:error]
        = error_messages_for :ticket

        #ticket_update_form
          %h3 Update this ticket
          - form_for([@project, @ticket_change], :html => {:class => 'form'}) do |f|
            .columns
              %div{:class => 'column left'}
                -# TODO: extract this node in partial with same part in tickets/new
                .group
                  %label.label{:for => 'ticket[description]'} Description
                  = f.text_area(:description, :cols => 40, :rows => 15, :class => 'text_area')

              %div{:class => 'column right'}
                .group
                  %label.label{:for => 'ticket[user_assigned_id]'} Who's is responsible ?
                  = f.collection_select :user_assigned_id, @ticket.project.project_members, :user_id, :user_name, :prompt => '-- None --'

                .group
                  %label.label{:for => 'ticket[state_id]'} Ticket status
                  = f.collection_select :state_id, State.all, :id, :name

                .group
                  %label.label{:for => 'ticket[priority_id]'} Ticket Priority
                  = f.collection_select :priority_id, Priority.all, :id, :name, :prompt => '-- None --'

                .group
                  %label.label{:for => 'ticket[milestone_id]'} Milestone
                  = f.collection_select :milestone_id, @project.milestones, :id, :name, :prompt => '-- None --'
            .clear
            .group
              %label.label{:for => 'ticket[tag_list]'} Choose some tags
              = f.text_field :tag_list, :value => @ticket_change.tag_list, :class => 'text_field'
            %div{:class => 'group navform'}
              = submit_tag "Update", :class => 'button'
              = submit_tag "Preview", :class => 'button'
